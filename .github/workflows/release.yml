name: Release Build

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | cut -d '"' -f2)
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "Building version $VERSION"

      - name: Install Rust & cross
        run: |
          rustup update stable
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build all targets
        run: |
          cross build --release --target aarch64-apple-darwin
          cross build --release --target aarch64-unknown-linux-musl
          cross build --release --target x86_64-unknown-linux-musl

      - name: Prepare artifacts
        run: |
          mkdir -p release-assets
          cp target/aarch64-apple-darwin/release/rbxbuild release-assets/rbxbuild-macos-arm64
          cp target/aarch64-unknown-linux-musl/release/rbxbuild release-assets/rbxbuild-linux-arm64
          cp target/x86_64-unknown-linux-musl/release/rbxbuild release-assets/rbxbuild-linux-x86_64

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            Automated release for version ${{ steps.version.outputs.version }}

            ## Binaries
            - macOS (M1/M2/M3): `rbxbuild-macos-arm64`
            - Linux ARM64 (for Apple Silicon Docker): `rbxbuild-linux-arm64`
            - Linux x86_64 (for servers): `rbxbuild-linux-x86_64`
          files: release-assets/*
